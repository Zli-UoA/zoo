name: CD
on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Set up buildx for docker
        uses: docker/setup-buildx-action@v2

      - name: Checkout
        uses: actions/checkout@v4

      - name: Build Docker image and save
        id: build-docker
        run: |
          TAG_NAME=zoo-backend:$(git rev-parse --short HEAD)
          FILE_NAME=zoo-backend_$(git rev-parse --short HEAD)
          docker build -f infra/Dockerfile-deploy -t ${TAG_NAME} .
          docker save --output ${FILE_NAME}.tar ${TAG_NAME}
          echo "::set-output name=TAG_NAME::${TAG_NAME}"
          echo "::set-output name=TAG_NAME::${FILE_NAME}"

      - name: Install cloudflared
        run: |
          lastest_version=$(curl -s $GITHUB_API_URL/repos/cloudflare/cloudflared/releases/latest | jq -r '.tag_name')
          mkdir -p /tmp/cloudflared
          curl -sL -o /tmp/cloudflared/cloudflared $GITHUB_SERVER_URL/cloudflare/cloudflared/releases/download/$lastest_version/cloudflared-linux-amd64
          chmod +x /tmp/cloudflared/cloudflared
          /tmp/cloudflared/cloudflared --version

      - name: Setup SSH
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
          name: id_ed25519
          config: |
            Host server
              HostName ${{ secrets.HOST_NAME }}
              User ${{ secrets.USER_NAME }}
              IdentityFile ~/.ssh/id_ed25519
              ProxyCommand /tmp/cloudflared/cloudflared access ssh --id ${{ secrets.SSH_CLOUDFLARED_ID }} --secret ${{ secrets.SSH_CLOUDFLARED_SECRET }} --hostname %h

      - name: Upload binary
        run: |
          rsync -vhz ${{ steps.build-docker.outputs.FILE_NAME }}.tar server:~/
          ssh server 'docker load --input ${{ steps.build-docker.outputs.FILE_NAME }}.tar && rm ${{ steps.build-docker.outputs.FILE_NAME }}.tar && docker stop $(docker ps -q) && docker run -d --restart always -p 8000:8000 ${{ steps.build-docker.outputs.TAG_NAME }}'
          
